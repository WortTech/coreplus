Core Plus 2.4.1

	* Fixed bug with themes not reinstalling as expected.
	* Moved the description field to above the input on standard form elements.
	* Better error reporting on the View.
	* Load blank meta data from the page object if provided in FormPageMetas.
	* New method, Core::CompareValues.  Provides more useful variable comparisons in forms.
	* New Filter option, linkname.  Allows the model key to be defined separately from the element name.
	* Updated the session system to make use of 5.4 systems.  This should clear up any weird issues with sessions.
	* Incremented the minimum php version from 5.3.x to 5.4.x.
	* Added form controller methods for several elements, including alternate page templates, user metatag autocompete,
	and keyword metatag autocomplete.
	* Support for alternate page templates is now working better!
	* Huge redux on how the page meta system operates and stores data.  Each key for each page is now stored individually
	in the page_meta table.  This allows for lookups of this metadata and for more functionality of the tags.
	* Scaffolding support for site-wide tag systems via the new metadata system.
	* Added support for <upgrade> directives to contain a <phpfileinclude> tag.  This file gets executed automatically upon
	the appropriate upgrade.  This allows for very fine grain upgrade logic such as data manipulations and whatnot.
	* Minor updates throughout the core and page request system to better support CLI testing.
	* Added support for readonly filters.  These are useful for print views.
	* Forms now support multiple models being added to it via Form::addModel.
	* Form groups now have a getID() method.  Acts the same as the getID method from FormElement.
	* New FormElement method, getValueTitle.  Gets the title of the currently selected option, if any.
	* Dropped the property Model::$_dirty in favor of the new Model::changed() method.  This actively checks the data for changes.
	* Added a new method, Model::getLinkFactory.  Allows for fine grain control of linked model factories.
	* New methods, Model::setToFormElement.
	* New method, Model::addToFormPost.
	* Added a unique flag to the Dataset object, allows for use of the mysql DISTINCT flag.
	* Added a new class, DatasetStream.  This buffers results from a dataset select statement so as to not use too much memory on massive queries.


Core Plus 2.4.0
	* Added support for hooks to have a return type attached to them.  This allows different hooks to return arrays or return statuses.
	* Added a ViewControls object, which is responsible for handling the <ul/> group of control links for a given object.
	* Added the docs into the upstream codebase for easier maintenance.
	* Added a smarty "controls" function meant for displaying the control links of a given subject.
	* Added the Dataset mode "Alter".  Useful for structural changes to the datastore.
	* Added the alter command "rename" to the dataset.  This allows for columns to be renamed pragmatically.
	* Added ModelSchema, ModelSchemaColumn, MySQLi_Schema, and MySQLi_Schema_Column objects.  These help break apart the
	different components of the mysqli backend and greatly simplified some of its logic.
	* Rewrote the createTable and modifyTable methods of the mysqli backend to make use of the new ModelSchema system.
	This has optimized the reinstall logic by scanning the tables before attempting modifications, the number of write
	statements is drastically lower.
	* Set the CoreDateTime object to default to "now" if no date is given on construction.
	* Added an XMLLoader::loadFromString method, allows XML data to be loaded from a string representation of it.
	* Cleaned up the XMLLoader a little and added inline documentation on the rest of its methods.
	* Added "getExtension" method in Directory_local_backend to provide better compatibility with the File backend.
	* Added logging for mimetype icons that don't exist on the system yet, (for DEVELOPMENT_MODE only).
	* Greatly optimized the copyFrom logic on local files.  Now instead of reading the entire file in memory, only up
	to 10MB of a file is read/written at a time.
	* Set the getPreviewURL method to skip processing if the execution time is within 5 seconds of timeout.
	* Updated some documentation.
	* Feature #223 - Historical Permalink lookup.  URLs can now be changed onthefly, and any requests to the old
	url will automatically be redirected to the new page with a 301.
	* Added redirect status option to Core::Redirect.  It defaults to a 302, but can be set to a permanent redirect instead.
	* Form elements now get 'required="required"' or 'checked="checked"' regardless if the value is set to true or "1".
	* Reimplemented the meta tags.  They're now more expandable by external components.
	* Set maxlength as a valid attribute on text inputs.
	* Set maxlength as one of the attributes passed from the Model to the Form on BuildFromModel.
	* Added support for page resolution requests to start with a '?'.
	* Changed the Template object to no longer extend Smarty.  This allows for a more specialized control of it and
	cleared up a STRICT warning in php 5.4.
	* Updated the config controller a little.
	* Added scaffolding support for multisite mode.
	* Added logic to check for a valid upgrade path in components prior to executing any of its upgrade logic.
	* Rewrote the ConfigHandler internal logic.  This is now a little easier to follow what it's doing.
	* Added support for the model to be "loaded" without all primary keys set.
	* Updated the ModelFactory to make use of the native ReflectionClass class.  Allows for more control over instantiating of objects.
	* Added a "SESSION_COOKIE_DOMAIN" configuration define, allows the site domain to be set for cookies.
	* Added a "findByField" method on the DatasetWhere object.  Allows for searching of a specific key in the where clause.
	* Reorganized the config.xml example to make it easier to set initially.
	* Reorganized some of the core hook names.
	* Removed some legacy code.
	* Added a modify method on the CoreDateTime object.
	* Added a zip contents object.
	* Added an ajaxlink javascript method.  Allows any "ajax-link" classed link to open in a jquery window.
	* Added a Core.Request javascript object to help with manipulation of the GET parameters.
	* Added sort and pagination ability to the Filter system.
	* Added context menus for controls.  These by default are hover based via the class "controls-hover".
	* Model _saveExisting can now be called from extending Models.  This is useful for those models that need to have
	more control over the save procedure.
	* Fixed some View logic to properly replace tags in the rendering now instead of duplicating the replacements.
	* Added hovercontext support to the ViewControl object.
	* Fixed `key` = NULL and `key` != NULL statements in the mysqli backend.  These are now replaced with IS and IS NOT.
	* Added a addWhereParts method to the DatasetWhereClause object.  Allows for adding of single where statements.
	* Expanded the Directory ls command to allow searching for specific extensions.
	* Updated the SessionModel save logic to perform an INSERT_OR_UPDATE on save.  Should fix the race condition.
	* Starting to add support for specific target widgets.  These will be targetable for areas such as /admin and user profiles.
	-- Charlie Powell <charlie@eval.bz>  30 Dec 2012


Core Plus 2.3.2
	* Set the FormPageParentSelectInput value to be strtolower all the time.  Should fix many of the baseurl and parenturl issues.
	* Added FilterForm system; allows for filters to be created and utilized.
	* Fixed the FormPageMeta form for page template lookup.  It was trying to use directories as files.
	* Added a resetLink method in the Model.  Useful for deleting a child and not wanting them to come back as linked.
	* Updated the title/seotitle feature (Feature #194) to make use of a dedicated variable.
	* Fixed the PageModel being set from a pageMetas object.  The meta tags were not coming over correctly because the name
	was changed slightly.
	* Added the input ID as the containing div's class name on formcheckboxesinput.
	* Updated the compiler to set only the relative path for the comments instead of the full path.
	* Switched the updater listing from NUMERIC sort to NATURAL sort.  This fixes the order of versions.
	* Fixed the input value being terminated after double quotes.  Resolution was replace the '/"' with '&quot;'.
	-- Charlie Powell <charlie@eval.bz>  16 Nov 2012

Core Plus 2.3.1

	* Fixed a bug with the parent page selection not selecting the correct parent page.
	* Updated the core.strings.js a little to prevent URLs from being crafted with two slashes next to each other.
	* Updated the smarty a block to ignore blank confirm requests.
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.3.0

	* Major change in the dataset WHERE structure.  Where statements now support nested clauses, each with their own
	separator and children.
	* Fixed a recursion bug with local files for if the file and mimetype icon are both unavailable.
	* Added a reset input element to the form system.
	* Added a "setLink" method to models, useful for HAS../BELONGSTO relationships.
	* Added a new "setFromForm" method on models.  Allows for more fine-tune control over the form/model interaction in controllers.
	* Added some inline documentation to the Dataset system.
	* Removed some debug content in the core.
	* Implemented Feature #194, SEO friendly title tag system.
	* Implemented the "getHash" method on remote files.
	* Improved logic in the smarty date function for invalid data being passed in.  Now an error is only thrown if the site
	is in development mode, otherwise simply a blank string is returned.
	* Switched default SSL mode from ONDEMAND to DISABLED in the configuration example file.
	* Reorganized the page edit form a little and wrapped the SEO options in a common fieldset.
	* Optimized some system performance a little.
	* Started to implement the new page_template system (partial support in place).
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.2.6

	* Fixed the navigation history in Core+.  Now saves the last 5 GET requests in history.
	* Fixed the "GoBack" function of Core.
	* Updated some documentation.
	* Added a "isGet" method on the current page request.
	* Added a "record" property onto the View.  Useful for indicating that certain pages shouldn't be recorded by analytical tools.
	-- Charlie Powell <charlie@eval.bz>  22 Oct 2012

Core Plus 2.2.5

	* Added logic to prevent URLs with a '#' in them.
	* Added a new class to handle datetimes, CoreDateTime.  This has better support for non-GMT unix timestamps by using
	the DateTime object more directly.  (Legacy Time class was based on php < 5.2 logic.)
	* Bug #173 - Minor tweak in the file preview system to strip spaces from the filenames.
	* Fixed a major bug in the core component loader.  Installed components were being listed as being loaded and activated
	before they were technically available.
	* Added support for custom user config validation.
	* Added "Registered Hooks" in the debug information at the bottom of the page.
	* Added support for resizing images with different rules, ie: fill mode or ignore aspect ratio.
	* Updated how widget parameters can be passed in.  Now smarty-style parameters are supports with the {widget} function.
	* Added a getRequest function for widgets.  Useful for getting the calling parameters.
	-- Charlie Powell <charlie@eval.bz>  21 Oct 2012

Core Plus 2.2.4

	* Fixed a bug on the page URL validation for the home page
	* Fixed the file local backend to better handle duplicate filenames.  It will now check the hash of each (#) file it
	finds instead of just skipping to the end of the line.
	* Removed an unnecessary directory from the root.
	-- Charlie Powell <charlie@eval.bz>  15 Oct 2012

Core Plus 2.2.3

	* Added more files into the compiled bootstrap
	* Added an included files section in the debug info
	* Added new core hook, "/core/page/rendering"
	* Fixed Bug #146: URL conflicts
	* Fixed Bug #156: Installer does not complete in non-development mode
	* Fixed Bug #115: Auto-installer does not handle models
	-- Charlie Powell <charlie@eval.bz>  14 Oct 2012

Core Plus 2.2.2

	* Fixed the installer, it now handles enabling packages correctly.
	* Fixed some other little bugs.
	-- Charlie Powell <charlie@eval.bz>  8 Oct 2012

Core Plus 2.2.1

	* Fixed the SSL implementation
	* Added javascript library for base64 operations
	* Styling tweaks
	* Fixed the file upload input if only one option is present
	* Switched the changelog to the new standard format
	* Added a new utility, create_component.  This will create the skeleton structure of a new component.
	* Added html5shiv, the successor to the html5ie project.
	* Added element IDs as a class name of the containing wrapper, allows for easier styling.
	* Fixes in the {img} tag for when the src is set but not available.
	* Added a User object in the javascript api to make some basic user information visible in javascript applications.
	* Updated the email system a little, it now sets the "Sender" and "X-Content-Encoded-By" headers.
	* Fix in the form system, added the autocomplete argument to parse correctly and a new getID method.
	* Fix in the model system to add support for models that are extended by other classes.
	* Set the debug info to be hidden in print views.
	-- Charlie Powell <charlie@eval.bz>  3 Oct 2012

Core Plus 2.2.0

	-- Charlie Powell <charlie@eval.bz>  20 Sep 2012

Core Plus 0.1.0
	* Implementing better support for Debian-style version strings.
	* new {css} smarty block.
	* CurrentPage now supports inline styles to be added to the head.
	* Other minor fixes.
	-- Charlie Powell <charlie@eval.bz>

Core Plus 0.0.9

	* In the process of switching to AGPL.
	* Moved the theme systems into its own component.
	-- Charlie Powell <charlie@eval.bz>  Sat, 19 Nov 2011 03:12:23 +0000

Core Plus 0.0.8

	-- Charlie Powell <charlie@eval.bz>  Fri, 04 Nov 2011 05:51:11 +0000

Core Plus 0.0.7

	* Major work on the system updater, it now fundamentally works at least!
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Nov 2011 01:21:43 -0400

Core Plus 0.0.6

	* Did some fixes to the email system, it now actually works.
	* Considerable work on improving the Model validation system.  It now actually works.
	* Minor tweak in the Form validation logic, it now just shows the validation check in the error message if the site is in development mode.
	-- Charlie Powell <charlie@eval.bz>  Tue, 11 Oct 2011 19:47:58 -0400

Core Plus 0.0.5

	* Updates to the stylesheet and the admin config system.
	-- Charlie Powell <charlie@eval.bz>  Sun, 18 Sep 2011 22:19:37 -0400

Core Plus 0.0.4
	* Adding phpMailer and the Email functionality back into the core.
	* Minor change to configuration options and how they're stored in the database.
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:47:36 -0400

Core Plus 0.0.3

	* More work completed on the user component (not included in core), and the widget system (included).
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:31:44 -0400

Core Plus 0.0.2-2

	* New cachecore method, flush().  This is useful in reinstalling all components and ensuring that there are no lingering artifacts.
	-- Charlie Powell <charlie@eval.bz>  Mon, 15 Aug 2011 17:24:19 -0400

Core Plus 0.0.2-1

	* Removing some unnecessary components, namely the adodb5 library and the old version of the Form system.
	* Did some updates to the phpass library.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Jul 2011 21:11:35 -0400

Core Plus 0.0.2

	* MAJOR changes, first re-release since the system switched from DAO to AR.  Includes a lot of other fixes too.
	-- Charlie Powell <charlie@eval.bz>  Tue, 21 Jun 2011 23:02:02 -0400

Core Plus 0.0.1-dev1

	-- Charlie Powell <charlie@eval.bz>  Sun, 22 May 2011 02:00:52 -0400
