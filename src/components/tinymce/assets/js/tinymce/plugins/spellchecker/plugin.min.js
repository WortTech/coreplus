// Compiled inline version. (Library mode)
(function(b,g){var d={};function c(m,n){var l,j=[];for(var k=0;k<m.length;++k){l=d[m[k]]||e(m[k]);if(!l){throw"module definition dependecy not found: "+m[k]}j.push(l)}n.apply(null,j)}function h(k,j,i){if(typeof k!=="string"){throw"invalid module definition, module id must be defined and be a string"}if(j===g){throw"invalid module definition, dependencies must be specified"}if(i===g){throw"invalid module definition, definition function must be specified"}c(j,function(){d[k]=i.apply(null,arguments)})}function f(i){return !!d[i]}function e(l){var j=b;var i=l.split(/[.\/]/);for(var k=0;k<i.length;++k){if(!j[i[k]]){return}j=j[i[k]]}return j}function a(l){for(var k=0;k<l.length;k++){var m=b;var o=l[k];var j=o.split(/[.\/]/);for(var n=0;n<j.length-1;++n){if(m[j[n]]===g){m[j[n]]={}}m=m[j[n]]}m[j[j.length-1]]=d[o]}}h("tinymce/spellcheckerplugin/DomTextMatcher",[],function(){return function(k,w,u){var v,j=[],q,n=0,A;var t,r,y;A=w.ownerDocument;t=u.getBlockElements();r=u.getWhiteSpaceElements();y=u.getShortEndedElements();function x(B){if(!B[0]){throw"findAndReplaceDOMText cannot handle zero-length matches"}var C=B.index;return[C,C+B[0].length,[B[0]]]}function i(B){var m;if(B.nodeType===3){return B.data}if(r[B.nodeName]){return""}m="";if(t[B.nodeName]||y[B.nodeName]){m+="\n"}if((B=B.firstChild)){do{m+=i(B)}while((B=B.nextSibling))}return m}function z(D,F,J){var B,I,G,C,K=[],H=0,E=D,m=F.shift(),L=0;out:while(true){if(t[E.nodeName]||y[E.nodeName]){H++}if(E.nodeType===3){if(!I&&E.length+H>=m[1]){I=E;C=m[1]-H}else{if(B){K.push(E)}}if(!B&&E.length+H>m[0]){B=E;G=m[0]-H}H+=E.length}if(B&&I){E=J({startNode:B,startNodeIndex:G,endNode:I,endNodeIndex:C,innerNodes:K,match:m[2],matchIndex:L});H-=(I.length-C);B=null;I=null;K=[];m=F.shift();L++;if(!m){break}}else{if(!r[E.nodeName]&&E.firstChild){E=E.firstChild;continue}else{if(E.nextSibling){E=E.nextSibling;continue}}}while(true){if(E.nextSibling){E=E.nextSibling;break}else{if(E.parentNode!==D){E=E.parentNode}else{break out}}}}}function s(D){var m;if(typeof D!="function"){var C=D.nodeType?D:A.createElement(D);m=function(F,E){var G=C.cloneNode(false);G.setAttribute("data-mce-index",E);if(F){G.appendChild(A.createTextNode(F))}return G}}else{m=D}return function B(K){var R,E,L,G=K.startNode,N=K.endNode,S=K.matchIndex;if(G===N){var H=G;L=H.parentNode;if(K.startNodeIndex>0){R=A.createTextNode(H.data.substring(0,K.startNodeIndex));L.insertBefore(R,H)}var F=m(K.match[0],S);L.insertBefore(F,H);if(K.endNodeIndex<H.length){E=A.createTextNode(H.data.substring(K.endNodeIndex));L.insertBefore(E,H)}H.parentNode.removeChild(H);return F}else{R=A.createTextNode(G.data.substring(0,K.startNodeIndex));E=A.createTextNode(N.data.substring(K.endNodeIndex));var P=m(G.data.substring(K.startNodeIndex),S);var O=[];for(var J=0,I=K.innerNodes.length;J<I;++J){var T=K.innerNodes[J];var Q=m(T.data,S);T.parentNode.replaceChild(Q,T);O.push(Q)}var M=m(N.data.substring(0,K.endNodeIndex),S);L=G.parentNode;L.insertBefore(R,G);L.insertBefore(P,G);L.removeChild(G);L=N.parentNode;L.insertBefore(M,N);L.insertBefore(E,N);L.removeChild(N);return M}}}q=i(w);if(q&&k.global){while((v=k.exec(q))){j.push(x(v))}}function p(B){var m=[];l(function(C,D){if(B(C,D)){m.push(C)}});j=m;return this}function l(C){for(var B=0,m=j.length;B<m;B++){if(C(j[B],B)===false){break}}return this}function o(m){if(j.length){n=j.length;z(w,j,s(m))}return this}return{text:q,count:n,matches:j,each:l,filter:p,mark:o}}});h("tinymce/spellcheckerplugin/Plugin",["tinymce/spellcheckerplugin/DomTextMatcher","tinymce/PluginManager","tinymce/util/Tools","tinymce/ui/Menu","tinymce/dom/DOMUtils","tinymce/util/JSONRequest"],function(n,k,j,l,m,i){k.add("spellchecker",function(t){var o,v;function p(A){for(var z in A){return false}return true}function r(D,C){var A=[],z=o[C];j.each(z,function(G){A.push({text:G,onclick:function(){t.insertContent(G);y()}})});A.push.apply(A,[{text:"-"},{text:"Ignore",onclick:function(){x(D,C)}},{text:"Ignore all",onclick:function(){x(D,C,true)}},{text:"Finish",onclick:w}]);var E=new l({items:A,context:"contextmenu",onhide:function(){E.remove()}});E.renderTo(document.body);var F=m.DOM.getPos(t.getContentAreaContainer());var B=t.dom.getPos(D);F.x+=B.x;F.y+=B.y;E.moveTo(F.x,F.y+D.offsetHeight)}function s(){var A,C=[],B={};if(v){w();return}v=true;function z(D){t.setProgressState(false);if(p(D)){t.windowManager.alert("No misspellings found");v=false;return}o=D;A.filter(function(E){return !!D[E[2][0]]}).mark(t.dom.create("span",{"class":"mce-spellchecker-word","data-mce-bogus":1}));A=null;t.fire("SpellcheckStart")}A=new n(/\w+/g,t.getBody(),t.schema).each(function(D){if(!B[D[2][0]]){C.push(D[2][0]);B[D[2][0]]=true}});t.settings.spellcheck_callback=function(F,E,D){i.sendRPC({url:t.settings.spellchecker_rpc_url,method:F,params:{lang:t.settings.spellchecker_language||"en",words:E},success:function(G){D(G)},error:function(G,H){if(G=="JSON Parse error."){G="Non JSON response:"+H.responseText}else{G="Error: "+G}t.windowManager.alert(G);t.setProgressState(false);A=null}})};t.setProgressState(true);t.settings.spellcheck_callback("spellcheck",C,z)}function y(){if(!t.dom.select("span.mce-spellchecker-word").length){w()}}function q(A){var z=A.parentNode;z.insertBefore(A.firstChild,A);A.parentNode.removeChild(A)}function x(B,A,z){if(z){j.each(t.dom.select("span.mce-spellchecker-word"),function(C){var D=C.innerText||C.textContent;if(D==A){q(C)}})}else{q(B)}y()}function w(){var A,z,B;v=false;B=t.getBody();z=B.getElementsByTagName("span");A=z.length;while(A--){B=z[A];if(B.getAttribute("data-mce-index")){q(B)}}t.fire("SpellcheckEnd")}function u(C){var B,D,A,G=-1,E,F;C=""+C;B=t.getBody().getElementsByTagName("span");for(D=0;D<B.length;D++){A=B[D];if(A.className=="mce-spellchecker-word"){G=A.getAttribute("data-mce-index");if(G===C){G=C;if(!E){E=A.firstChild}F=A.firstChild}if(G!==C&&F){break}}}var z=t.dom.createRng();z.setStart(E,0);z.setEnd(F,F.length);t.selection.setRng(z);return z}t.on("click",function(A){if(A.target.className=="mce-spellchecker-word"){A.preventDefault();var z=u(A.target.getAttribute("data-mce-index"));r(A.target,z.toString())}});t.addMenuItem("spellchecker",{text:"Spellcheck",context:"tools",onclick:s,selectable:true,onPostRender:function(){var z=this;t.on("SpellcheckStart SpellcheckEnd",function(){z.active(v)})}});t.addButton("spellchecker",{tooltip:"Spellcheck",onclick:s,onPostRender:function(){var z=this;t.on("SpellcheckStart SpellcheckEnd",function(){z.active(v)})}})})});a(["tinymce/spellcheckerplugin/DomTextMatcher","tinymce/spellcheckerplugin/Plugin"])})(this);