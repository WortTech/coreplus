CodeMirror.defineMode("ruby",function(e){function a(r){var q={};for(var n=0,p=r.length;n<p;++n){q[r[n]]=true}return q}var i=a(["alias","and","BEGIN","begin","break","case","class","def","defined?","do","else","elsif","END","end","ensure","false","for","if","in","module","next","not","or","redo","rescue","retry","return","self","super","then","true","undef","unless","until","when","while","yield","nil","raise","throw","catch","fail","loop","callcc","caller","lambda","proc","public","protected","private","require","load","require_relative","extend","autoload"]);var h=a(["def","class","case","for","while","do","module","then","catch","loop","proc","begin"]);var d=a(["end","until"]);var c={"[":"]","{":"}","(":")"};var k;function b(n,p,o){o.tokenize.push(n);return n(p,o)}function f(s,q){k=null;if(s.sol()&&s.match("=begin")&&s.eol()){q.tokenize.push(j);return"comment"}if(s.eatSpace()){return null}var p=s.next(),n;if(p=="`"||p=="'"||p=='"'||(p=="/"&&!s.eol()&&s.peek()!=" ")){return b(l(p,"string",p=='"'||p=="`"),s,q)}else{if(p=="%"){var o,t=false;if(s.eat("s")){o="atom"}else{if(s.eat(/[WQ]/)){o="string";t=true}else{if(s.eat(/[wxqr]/)){o="string"}}}var r=s.eat(/[^\w\s]/);if(!r){return"operator"}if(c.propertyIsEnumerable(r)){r=c[r]}return b(l(r,o,t,true),s,q)}else{if(p=="#"){s.skipToEnd();return"comment"}else{if(p=="<"&&(n=s.match(/^<-?[\`\"\']?([a-zA-Z_?]\w*)[\`\"\']?(?:;|$)/))){return b(g(n[1]),s,q)}else{if(p=="0"){if(s.eat("x")){s.eatWhile(/[\da-fA-F]/)}else{if(s.eat("b")){s.eatWhile(/[01]/)}else{s.eatWhile(/[0-7]/)}}return"number"}else{if(/\d/.test(p)){s.match(/^[\d_]*(?:\.[\d_]+)?(?:[eE][+\-]?[\d_]+)?/);return"number"}else{if(p=="?"){while(s.match(/^\\[CM]-/)){}if(s.eat("\\")){s.eatWhile(/\w/)}else{s.next()}return"string"}else{if(p==":"){if(s.eat("'")){return b(l("'","atom",false),s,q)}if(s.eat('"')){return b(l('"',"atom",true),s,q)}s.eatWhile(/[\w\?]/);return"atom"}else{if(p=="@"){s.eat("@");s.eatWhile(/[\w\?]/);return"variable-2"}else{if(p=="$"){s.next();s.eatWhile(/[\w\?]/);return"variable-3"}else{if(/\w/.test(p)){s.eatWhile(/[\w\?]/);if(s.eat(":")){return"atom"}return"ident"}else{if(p=="|"&&(q.varList||q.lastTok=="{"||q.lastTok=="do")){k="|";return null}else{if(/[\(\)\[\]{}\\;]/.test(p)){k=p;return null}else{if(p=="-"&&s.eat(">")){return"arrow"}else{if(/[=+\-\/*:\.^%<>~|]/.test(p)){s.eatWhile(/[=+\-\/*:\.^%<>~|]/);return"operator"}else{return null}}}}}}}}}}}}}}}}function m(){var n=1;return function(p,o){if(p.peek()=="}"){n--;if(n==0){o.tokenize.pop();return o.tokenize[o.tokenize.length-1](p,o)}}else{if(p.peek()=="{"){n++}}return f(p,o)}}function l(n,o,q,p){return function(u,s){var t=false,r;while((r=u.next())!=null){if(r==n&&(p||!t)){s.tokenize.pop();break}if(q&&r=="#"&&!t&&u.eat("{")){s.tokenize.push(m(arguments.callee));break}t=!t&&r=="\\"}return o}}function g(n){return function(p,o){if(p.match(n)){o.tokenize.pop()}else{p.skipToEnd()}return"string"}}function j(o,n){if(o.sol()&&o.match("=end")&&o.eol()){n.tokenize.pop()}o.skipToEnd();return"comment"}return{startState:function(){return{tokenize:[f],indented:0,context:{type:"top",indented:-e.indentUnit},continuedLine:false,lastTok:null,varList:false}},token:function(r,o){if(r.sol()){o.indented=r.indentation()}var n=o.tokenize[o.tokenize.length-1](r,o),q;if(n=="ident"){var p=r.current();n=i.propertyIsEnumerable(r.current())?"keyword":/^[A-Z]/.test(p)?"tag":(o.lastTok=="def"||o.lastTok=="class"||o.varList)?"def":"variable";if(h.propertyIsEnumerable(p)){q="indent"}else{if(d.propertyIsEnumerable(p)){q="dedent"}else{if((p=="if"||p=="unless")&&r.column()==r.indentation()){q="indent"}}}}if(k||(n&&n!="comment")){o.lastTok=p||k||n}if(k=="|"){o.varList=!o.varList}if(q=="indent"||/[\(\[\{]/.test(k)){o.context={prev:o.context,type:k||n,indented:o.indented}}else{if((q=="dedent"||/[\)\]\}]/.test(k))&&o.context.prev){o.context=o.context.prev}}if(r.eol()){o.continuedLine=(k=="\\"||n=="operator")}return n},indent:function(r,n){if(r.tokenize[r.tokenize.length-1]!=f){return 0}var q=n&&n.charAt(0);var p=r.context;var o=p.type==c[q]||p.type=="keyword"&&/^(?:end|until|else|elsif|when|rescue)\b/.test(n);return p.indented+(o?0:e.indentUnit)+(r.continuedLine?e.indentUnit:0)},electricChars:"}de"}});CodeMirror.defineMIME("text/x-ruby","ruby");