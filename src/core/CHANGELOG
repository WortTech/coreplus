Core Plus 2.6.1

	* [Security] Hide version numbers when not in development!
	* [Security] fix - Pages cannot be requested on methods that exist on the parent Controller object.
	* [Security] Add a "Security" type into the changelog system.
	* [Bug] Fix checkboxes "check/uncheck all" logic and support for multiple instances.
	* [Bug] Fix file inputs with no value selected by default, but not required.
	* [Bug] Fix the installer not being able to purge the cache.
	* [Bug] Rewrite maps correctly handle URLs with query strings attached to them.
	* [Bug] Forgot to prefix an Exception with the root namespace.
	* [Performance] Optimize the performance of Core::VersionSplit.
	* [Performance] Optimize some of the Core javascript a bit.
	* [Performance] New support for an asset version for better cache control.
	* [Performance] Optimize the admin bar logic slightly.
	* [Feature] FilterForm supports a 'dateformat' attribute.
	* [Feature] Minify the the admin configuration page a bit more.
	* Switch the userconfig install directive to use the new default fields.
	* Config to FormElement is abstracted into its own function.
	* View is more self-contained and less static.
	* New methods, \Core\page_request and \Core\view.
	* Remove the /core/filestore/previews option as this is no longer used anywhere.
	* Remove an unnecessary file from a legacy naming convention.
	* Error pages are a little more professional reading.
	* Resolve Link gracefully handles controllers that cannot be resolved.
	* Need to use version_compare for the changelog sorting.
	* Group the radio options in a common div.
	* Set a few defaults for datetime type form fields.
	* DateTime form elements support displayformat and saveformat as parameters.
	* Switched the private method getEntriesSorted to public.
	* Add a getPreviousSection method on the changelog parser.
	* Standardized the order of returning changelog entries.
	* Changelog sections properly ignore duplicate entries.

Core Plus 2.6.0

	* [Bug] Minor bug in the updater template.  Needed to use version_compare instead of "<="
	* [Bug] The "disabled" form attribute is now better handled on both the renderer and the parser.
	* [Bug] Moved component include installation directives to a separate method so that they won't
	  interferre with the installation variables!
	* [Performance] Applied more aggressive compiling on the bootstrap.  Gives a little bit more
	  performance.
	* [Performance] Modified time is now used for local -> local file comparisons.  This is because mtime
	  is about 14-times quicker than a md5sum comparison.
	* [Performance] Boosted the caching on the UserAgent object a little.
	* [Feature] New feature - /form/savetemporary.ajax, this is a page that will save a given submitted
	  form back to the session as an auto-save feature.
	* [Feature] Added a new form element, FormPageMetaAuthor.
	* [Feature] Added a new form group: 'FormTabsGroup'.  This uses javascript to render out a tab-based
	  layout.
	* [Feature] Added support for FromGroups to be mapped via name.
	* [Feature] Implemented Feature #385 - Sanitize filenames for files uploaded
	* [Feature] checkbox groups now have a toggle all option
	* [Feature] Added a "keepdots" parameter to the str_to_url function.  Useful for filenames
	* [Feature] Major rewrite to the page form elements.  The PageModel is now responsible for all of the
	  elements rendered out.
	* [Feature] Disabling components now actually removes their user configuration options and pages from
	  the system; (enabling re-adds them back).
	* [Feature] Disabling and enabling components now register in the security log.
	* [Feature] The site is now locked automatically when the automatic reinstaller is initialized.  This
	  prevents the site from dropping into multiple reinstalls at once.
	* [Feature] FilterForm now supports "linkvalueprefix" and "linkvaluesuffix".  These get prepended and
	  appended automatically to any value; useful for datetime strings.
	* [Feature] Widget instances and Widgets now can keep track of which "installable" tag the widget was
	  called with.  This allows metadata to be passed into the widget.
	* [Feature] Added 'Performance' to the list of changelog types.
	* [Feature] BaconIpsum is now included in Core by default!
	* [Feature] Added the various Creative Commons license images and GNU license images.  These are used
	  along wtih the new metaata/media manager system.
	* [Feature] Parsed HTML now get the metadata tags for images automatically.  ie: insertables.
	* Updated the documentation on all the Form elements.
	* New method, Template::getInsertables.  This has been moved from the page element system to the
	  template system where it belongs.
	* New method, Form::addElementAfter.  This allows an element to be insert into the Form after another
	  element.  Useful for Form manipulation.
	* New method, Form::getGroup.  Will search through the element list for a given group by its name, and
	  create one if it doesn't exist.  Takes into account the Group type too.
	* New method, Form::getModels.  Just returns the unaltered models associated to a Form.
	* Form::addElement now supports the attributes "group" and "grouptype".
	* The Form system now skips automatic form handling on any /form/*.ajax page.  This allows those pages
	  to be submitted to directly to act as metafunctions for forms.
	* Models with existing data can now have a UUID column added.
	* Insertables are now better linked to the given page's site.
	* Rearranged the title and parenturl for pages.  This allows the basic information to be displayed
	  first.
	* System form elements now jsonencode their values.  Allows multi-values to be used in the unique key
	* Greatly cleaned up the fileinput javascript.  It's now actually readable.
	* FileInput now supports browsing for files on the server.  This is enabled with the form element
	  attribute "browsable".
	* Changed what the FileInput returns for its set value.  Now, instead of simply returning the basename
	  of the file, it returns the prefix "public/*" part as well.  This is to support the browseable
	  feature.
	* New form element, License Input ("license").  This display a drop-down with the various licenses
	  supported on the system.
	* PageMetaKeywords file input no longer requires a page to be attached.  This allows the same input to
	  be used for file keywords as well.
	* New metadata system for files.
	* Switched to use the cacheable version of UserAgent in the two spots that it was being called.
	  Caching on this object is extremely important because it's so heavy.
	-- Charlie Powell <charlie@eval.bz>  Sat, 20 Jul 2013 16:07:38 -0400

Core Plus 2.5.8

	* [Bug] Fixed a bug when loading a file from /tmp.  This needed to have been forced as a FileLocal
	  object despite that it may not be in the registered tmp location.  PHP File uploads for example use
	  the system-registered location.
	* [Bug] Several fixes to the system updater, particularly in regards to theme support.
	* [Feature] Added a \Core\Filestore\extension_to_mimetype function to help centralize mimetype
	  resolution for files and incoming requests.
	* [Feature] Added a javascript object Core.Browser.  This contains some information about the user
	  agent currently viewing the site.
	* [Feature] UserAgent now has a 'isMobile' method.  Simply checks if the type is "Mobile Browser".
	* [Feature] Added a skin-level variable, "body_classes".  This automatically gets the various
	  system-defined classes such as ua-is-mobile, the page id, and a few others.  In addition, the
	  bodyclasses property of the view is now accessable for custom class names.  (NOTE, you will NEED to
	  add {$body_classes} in your skin.)
	* Removed the Core.Version property in production.
	* Retooled the UserAgent system to use browscap.ini instead of the previous system.  Browscap seems to
	  be better maintained and has more uptime.
	* Improved the documentation of the Profiler class.
	* Centralized some of the logic in the Profiler class internally.  This makes the system more stable
	  and easier to maintain.
	* Modified the Core JS template function.  It now uses "[%%" and "%%]" as the prefix and suffix for
	  variables.  This removes the chance that "%" will be used inside the template body.
	-- Charlie Powell <charlie@eval.bz>  Wed, 26 Jun 2013 17:43:16 -0400

Core Plus 2.5.7

	* [Bug] Fix for bundling components that have a < 1 version.  An example of this is "r7".
	* [Bug] Component getRequires needed to return all components in lowercase.
	* [Bug] Component isLoadable needed to check if the files are loaded instead of just loaded.
	* [Bug] Component added library checks the the isLoadable check.  This was needed for components that
	  provide functionality from another component.
	* [Bug] Core can now load without the User component available.  This is a fringe case for upgrades.
	* [Bug] Prevented the admin_group page attribute from displaying on forms.
	* [Bug] Added additional logic in the admin menu to be able to render on legacy codebases without the
	  proper jquery version.
	* [Feature] Some new developer utilities, "export_dev_bundle.sh" for one.  This is a script that will
	  export the CWD as an installable bundle with all the developer utilities and un-minified components.
	* [Feature] Updated the system updater to better display components that have errors with them.
	* [Feature] Removed the execMode check on components.
	* [Feature] Created a \Core\parse_html function.  This scans for <img/> tags and replaces them with
	  server-resized versions if necessary.
	* [Feature] Added in Directory_local_backend, File_local_backend, and Template classes to support
	  legacy versions of the code.
	* [Feature] Added the ability to specify the <h /> level for the starting element of the Changelog
	  system.  Useful for creating custom changelog reports.
	* [Feature] Added a "/core/security/x-frame-options" config option for defining the X-Fame-Options
	  header.  Defaults to "SAMEORIGIN".
	* [Feature] The admin menu now responds to touch events as well as hover.
	* Moved Core::Redirect to \Core\redirect
	* Moved Core::Reload to \Core\reload
	* Moved Core::GoBack to \Core\go_back
	* Minor fixes in the Changelog system for parsing files.
	-- Charlie Powell <charlie@eval.bz>  Thu, 13 Jun 2013 17:45:25 -0400

Core Plus 2.5.6

	* [Feature] Retooled the filestore system.  It is now more self contained and has actual tests behind
	  it
	* [Feature] Added a new method for templates, hasWidgetAreas.
	* [Feature] Insertables now will parse for resized images and return the server-resized version.
	-- Charlie Powell <charlie@eval.bz>  Wed, 05 Jun 2013 17:59:50 -0400

Core Plus 2.5.5

	* [Bug] Fixed a minor glitch when /file/preview is recording its entry in the page navigation.  This
	  caused some weird redirect issues.
	* [Bug] Set /file/preview to allow reading of "asset/" files.  This is the discouraged method of
	  loading assets, but allowed.
	* [Bug] Minor bug in the HookHandler.  Did not account for type="string" returns that didn't have a
	  return value.
	* [Bug] Set the file local getFilenameHash to return a more agnostic asset path.  Now the theme name
	  is dropped as it's unnecessary.
	* [Bug] Fix in the packager to ignore filenames that end with "~".  These are backup files that are
	  not necessary.
	* [Feature] Added support for page groups under the admin menu.
	* [Feature] Set hard-mapped pages to overwrite their access strings from the component metafile upon
	  reinstallation.  This is because those pages are generally managed by the developer and not the end
	  user.
	-- Charlie Powell <charlie@eval.bz>  Mon, 20 May 2013 17:29:44 -0400

Core Plus 2.5.4

	* [Bug] Minor bug fix, components needed to include the trailing slash for getAssetDir().
	* [Bug] Models now support non-array primary keys.  This is a discouraged ability, but still a
	  supported one.
	* [Feature] Added the ability for web administrators to manage their own "custom" assets and
	  templates.  These are resources set by the developer, but editable admins.  Upon changing a file,
	  that file is copied to the "themes/custom" directory to prevent overwriting of the file upon future
	  updates.
	* [Feature] Emails can now have a skin.  This is useful for outbound communication branding.
	* [Feature] Form caches can now be purged from within a controller!
	* [Feature] New hook type - "string".  This will stop propagation immediately if a non-zero length
	  string is returned from a listener.
	* [Feature] Do not set the updated timestamp on a new model if it's already set.  This may be useful
	  for fine-tuning how the data behaves.
	* [Feature] Added a few more custom mimetypes that may be returned in Ubuntu 13.04.
	* [Feature] New reset.css and reset.min.css files available in core.  These are a combination of the
	  normalize and main html5 bootstrap files.
	* [Feature] Message icons are now a part of core instead of the default theme.
	* [Feature] Imported newest version of html5shiv into the core.
	* [Feature] Controllers can now register their view to be rendered with the "admin" mastertemplate,
	  (aka skin).  This is a shortcut to use whichever admin skin is set.
	* [Feature] Retooled the smarty {img} function to use the /file/preview controller if the file doesn't
	  exist.  This allows for non-blocking displaying of previewable assets.
	* Centralized the hash generation for forms.  This allows better support for purging a form's cache
	  from within the controller.
	* Migrated "default" theme asset files to core.  With the new structure, it doesn't make as much sense
	  to keep that as a separate directory.  These include mimetypes, placeholders, and a few other
	  images.
	* Reimplemented the file/preview controller in core.  This now supports public/ and asset/ files
	  again.
	* Increased FTP error reporting.  It now complains with the specific part that failed, (username,
	  path, etc).
	* \Core\user now retrieves from the session variable all the time.  This allows an external script,
	  (say /login), to modify the user object and make it immediately visible.
	* Completely rewrote the local file management for previewing files.  It is now broken into three
	  separate methods, (with one private helper method).  getPreviewFile(), getPreviewURL(), and
	  getQuickPreviewFile().
	-- Charlie Powell <charlie@eval.bz>  Thu, 16 May 2013 02:13:43 -0400

Core Plus 2.5.3

	* [Feature] Now supports the new admin-only skin option.
	* Minor cleanups in the controls hover menu.
	-- Charlie Powell <charlie@eval.bz>  Mon, 29 Apr 2013 14:32:34 -0400

Core Plus 2.5.2

	* [Bug] Fixed a bug that ocurred with models that start with "Model" and end with "Model".
	* [Bug] Fixed a bug on the smarty widgetarea function to translate fully resolved paths back to their
	  relative location.  Useful for matching up which page has which widget installed on it.
	* [Bug] Set the adminbar to be hidden on print by default.
	* [Feature] New hooks available - /core/model/presave and /core/model/postsave.  These are useful for
	  attaching into the model save procedure.
	* [Feature] Model->getKeySchemas and getKeySchema now have a "title" attribute for each record.  This
	  is a human-friendly name generated from either the form data or the machine name.
	* [Feature] New methods, Model->getData and getInitialData.  Useful for getting the raw data prior to
	  or post save.
	* [Feature] new method, Model->getPrimaryKeyString gets the PK values for a given record as a
	  flattened string.
	* [Feature] New support for reading CSV files.
	* [Feature] New support for the "expries" header in remote files.  If this is present and valid, no
	  server calls will even be made for a given remote file.
	* Removed the "g:admin" permission string on /admin.  This allows the dashboard page to be properly
	  used as a dashboard for any user with access to a "admin=1" page.
	* Better phpdoc for the file input form element.
	* Prettified the accept file error a little.  It now generates english-readable text instead of a
	  machine-type printout.
	-- Charlie Powell <charlie@eval.bz>  Mon, 22 Apr 2013 10:24:39 -0400

Core Plus 2.5.1

	* [Bug] Set the smarty "mail" command to require the Core mail javascript.
	* [Bug] PageModel::getResolvedURL now can render cross-site links when in enterprise/multisite mode.
	* [Bug] Make sure not to record the navigation for 404 pages.
	* [Feature] Added support for Model::ATT_TYPE_UUID_FK and Model::ATT_TYPE_ID_FK. These are currently
	  just helper constants so I don't have to remember how many characters a UUID is.
	* [Feature] New method: FilterForm::getTotalCount; just returns the total if it's set.
	* [Feature] Added support to for namespaced classes in the Core autoload system.  They are treated
	  just like any other class, as in they can be in whatever directory for a given component.  The
	  packager also correctly scans them too.
	* [Feature] Moved the changelog parsing logic into its own set of classes.  This allows the changelogs
	  to be parsed from additional scripts.
	* [Feature] Added a utilities/generate_changelog script to compile HTML versions of the changelogs on
	  the site.
	* [Feature] Changelog entries will now be organized in a particular order: bugs, features, then other.
	* [Feature] Added the changelog generation to the full build.
	* [Feature] Added additional debugging logs throughout the core code to better troubleshoot core
	  issues.
	* [Feature] New support for optional CSS files in template files.
	* Display view errors when in development mode along with their backtrace.
	* Minor fix in the {a confirm} usage; properly escaping single and double quotes now.
	* Organizing phpdoc to build better documentation.
	* Migrated Debug::Write to Core\Utilities\Logger
	* Migrated Core::*Profile to Core\Utilities\Profiler
	* Organized the core-cache logic a little in hopes of alleviating a strange bug that popped up on one
	  site.
	* Overhauled the template system entirelly.  Template is now a factory-only class and the specific
	  rendering engines are now polled automatically based on the file extension.
	* Changed the Core::GoBack method to ignore the same page that the user is currently on.  This allows
	  "1" to be used on a POST page as if it were the original page load.
	-- Charlie Powell <charlie@eval.bz>  Mon, 15 Apr 2013 15:48:05 -0400

Core Plus 2.5.0

	* [Bug] Fix in the Model system to not try to propagate keys up to the parent of a linked model.
	* [Performance] Minor performance tweaks in the PageModel.
	* [Feature] Added a new filter type, "CONTAINS".  This is useful for filter examples such as "Email
	  contains @gmail".
	* [Feature] Added some logic to gracefully handle if the export directories do not exist.
	* [Feature] Added a Core.Strings.rot13 javascript function.
	* [Feature] Added a DateTimeInput.
	* [Feature] Added support for components with a space in their filename.
	* [Feature] Added support for encrypted configuration options.
	* Tweaks to the versioning system.
	* Wrote some tests for VersionSplit and VersionCompare.
	* Components now support an auto-install mode for assets.  This only runs during development mode.
	* Changed the behaviour of filters.  They now accept "0" as a valid value and will display the filter
	  system with it if a "" value is present.  This enables filters that act on a boolean property to
	  function correctly.
	* Changed the behaviour of Form::addModel and getModel methods.  The form system now saves the model
	  in a local variable and makes that exact model available on the next pageload.
	* Removed some legacy code from the Form system pertaining to the PageModel.  That model now handles
	  the logic internally.
	* Better enforcing Model and the DMI default values.  ex: enum field types now require one of the
	  options to be set as default if null is set to false.
	* Moved the "components_load_complete" hook to be fired after the postincludes instead of before. This
	  ensures that smarty and some other systems are available.
	* Bad components don't get disabled immediately, makes development easier.
	* Packager now supports some CLI arguments for various common tasks.  Repackage component, repackage
	  theme, list components and list themes.
	* Modified the user config weight a little.  Now automatic weights are all +1000, so they will float
	  to the bottom of user-defined sorting.
	* New method, ConfigHandler::IsOverridden.  Useful in enterprise mode.
	* Heavier use of Model::translateKey throughout the system.  Helps to centralize the logic.
	* General exceptions are now caught in the view.
	* Component debug listing is now sorted alphabetically.
	* NULL is now handled more gracefully in the Model.
	* Set the install redirect to be a 302.  Should help prevent FF from redirecting endlessly on new
	  installs.
	* Upgraded phpmailer to 5.2.4
	* Using "getKeyName" for components, should fix the name/directory issues.
	* Switched the filestore directives to constants defined within the configuration.xml file. This helps
	  make the installer more user-friendly and stable.
	* Updated several core subsystems to work better when the core isn't installed yet.
	-- Charlie Powell <charlie@eval.bz>  Mon, 01 Apr 2013 20:51:54 -0400

Core Plus 2.4.6.3

	* More fixes in the updater UI.
	* New methods to get the changed files in a given component.
	* Packager now displays which component has local changes, (needs to be packaged).
	* Installer will now refuse to update a component with local changes.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 15:42:08 -0500

Core Plus 2.4.6.2

	* FTP Fixes in core.
	* Installer is more efficient.
	* Component->disable now flags the component as disabled on that same pageload.
	* Core better handles upgrade errors for components.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 14:14:27 -0500

Core Plus 2.4.6.1

	* Updates to the installer, primarily more verbose output and reloading the package list on a
	  successful installation via the UI.
	* Removed some legacy code from the packager.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 12:53:22 -0500

Core Plus 2.4.6

	* [Bug] Fixed the smarty issue of SMARTY_DIR already being defined.
	* Minor fixes in the updater including CGI mode support and correctly handling empty "operation"
	  requests.
	* Do not try to parse userconfigs if that model doesn't exist.  Fixes user component updates.
	* Support for the new userconfig features.
	* Changed how the reload method works slightly.  It now sends a 302 header along with the location.
	* If a form action returns the same page that it is currently on, the form system will reload the page
	  instead of trying to redirect.
	-- Charlie Powell <charlie@eval.bz>  Fri, 22 Feb 2013 15:42:17 -0500

Core Plus 2.4.5

	* [Bug] Fixed support for the "class" names on form elements
	* [Bug] Fixed the <aside><aside> error.  Widgets should have been divs instead of their aside.
	* [Bug] Fixed bug #92 - Installer still runs for components if no upgrade path available.
	* [Bug] Fixed bug #253 - Disabled components cannot be re-enabled.
	* [Bug] Fixed the Directory remove statement for tmp filesystem over FTP.
	* [Bug] Fixed the File remove statement for tmp filesystem over FTP.
	* [Feature] Added a warning on the repos landing page if the gnupg directory is not writable.
	* [Feature] Added a repos_delete page.  This is kinda useful...
	* [Feature] Added some debug statements throughout the system.
	* Made the hover controls enabled by default
	* New admin hook system and dashboard, (still in beta).
	* Switched all widgets to use the "installable" flag instead of baseurl for that attribute. This just
	  helps with confusion between those two different elements.
	* Zip files that have a mimetype of application/octet-stream are now detected appropriately.
	* Removed the "enabled" flag on update sites.  If it's present in the system, it's going to be used.
	* Set the updater page to display the enabled components sorted by name.  This makes it easier to skim
	  through and see what's installed.
	* Removed repos_edit page.  There's no data to really edit.
	* Cleaned up the repo landing page and added descriptions for the repositories.
	* New 2.4 API level for repo.xml and package.xml files.
	* Repositories now support descriptions.
	* Repositories now support gpg keys embedded.  These get installed automatically upon adding the repo
	  to a site.
	* Changed how "textarea" user prompting works in CLI mode.  Now it displays the message and has the
	  user press enter to continue.  This gives the user a chance to see the message.
	* Major cleanups to the component package logic.
	* Core API 2.4 is now a recognized API version for components.
	* The packager now writes at API level 2.4.
	* PageRequest method getPost now accepts POST data that is nested by one-level, ie: "model[id]" is now
	  supported.
	* XMLLoader now supports a schema for XML files.  This is useful in assigning a DTD schema source
	  automatically.
	* FileContentFactory now works [better] if Core isn't loaded.
	* Overhauled the create_repo script to be a little more user friendly and to work with the new repo
	  features.
	* Overhauled the update backend and UI.  This now behaves more closely to how the WHM updater looks.
	* Cleaned up the Hook system a little; it now complains if you try to register two hooks with the same
	  name.
	* Admin dashboard widgets now get installed to the dashboard automatically, (they can later be removed
	  if desired).
	* Core::CheckClass no longer tries to load itself recursively.....  I'm not sure what I was smoking
	  when I put those lines in :/
	* Core::GetComponent now will retrieve a disabled component if called by name.
	* New shortcut method, CoreDateTime::Now().  This gets the time "now".
	* Debug::Write now formats the messages using <pre> tags.
	* File copies now throw Exceptions.
	* The GPG key of a given package is now listed in the repo.xml file.
	-- Charlie Powell <charlie@eval.bz>  Wed, 20 Feb 2013 17:56:08 -0500

Core Plus 2.4.4

	* [Feature] Added support for UUID column types in models.  These are treated exactly the same as IDs,
	  but their values are generated via Core instead of the underlying database system and they are
	  supported in multi-server modes.
	* [Feature] Added support for "selectable" as an attribute on the <page> directive in component.xml
	  files.
	* [Feature] Added support for UUID based model columns in the form system.  They are respected the
	  same as IDs.
	* [Feature] Added support for Date based model columns in the form system.
	* Set the packager to allow whitespace before the class declaration.
	* New form element: date input.  This uses jqueryui to render a datepicker on the form element.
	* Some fixes for user permissions in multisite mode.  The permission cache is now cleared on page load
	  when multisite is enabled.
	* Updated many of the form element styles.
	* Minor fix in the packager for CHANGELOG management.
	-- Charlie Powell <charlie@eval.bz>  Sat, 09 Feb 2013 23:36:50 -0500

Core Plus 2.4.3

	* [Bug] Fix in Core::CheckClass for when the file containing a given class is not found. Now an
	  exception is thrown.
	* [Feature] Added pageviews into the core page system.  This is a counter that is incremented every
	  time a page is viewed if that page exists in the page table.
	* [Feature] Added an X-FRAME-OPTIONS header of SAMEORIGIN.  This is a security fix.
	* [Feature] Added support for IN where statements.
	* New method, Core::GetHistory.  This behaves the same as GoBack, except that it simply returns the
	  url instead of redirecting.
	* Ajax and JSON pages no longer record navigation.
	* Force displaying of all errors if in development mode.
	-- Charlie Powell <charlie@eval.bz>  Mon, 04 Feb 2013 15:29:17 -0500

Core Plus 2.4.2

	* [Feature] Added a "getControls" method onto the Controller.  This allows controls for an entire
	  controller to be shared and set in one location.
	* [Feature] Added a method Core::GenerateUUID to generate a globally unique ID in the format of
	  "1-c5dbcaaf9db-8d77".  The first digit is the site id, (more on that in a later version), the next
	  snippet is the timestamp, and the last is a random set of digits.
	* [Feature] Added setting functionality on the widget system.  This allows for a custom Widget to have
	  minor settings stored along with the widget definition itself.
	* Reduced the size of the page_meta::meta_value attribute slightly, was causing some mysql servers to
	  complain about the key size.
	* Some minor fixes and tweaks on the admin config when dealing with multisite modes.
	* Switched the PageMetas getValue method to return an array of element values instead of a json
	  string.
	* MAJOR API CHANGE: Moved the automatic processing of models, assets and other files to before the
	  <upgrade> tasks.  This means that the database will be at the version of the code regardless of
	  which version it's upgrading from.
	* Forcing the save of session data prior to reloading and redirecting. This should resolve some weird
	  quirks.
	* New method, Session::ForceSave.  This will write the current $_SESSION data back to the datastore.
	* Updated the packager to wordwrap lines to stay within 100 characters. Also improved the formatting a
	  little.
	* Set the shorthand version of addControl to allow to use custom icons.
	* Set the ViewControl system to ignore controls that link to the current page.  These are redundant to
	  display to the user.
	* Switched the ViewControl behaviour to use hover context menus by default.
	-- Charlie Powell <charlie@eval.bz>  Fri, 01 Feb 2013 18:59:24 -0500

Core Plus 2.4.1

	* [Bug] Fixed bug with themes not reinstalling as expected.
	* [Feature] Added form controller methods for several elements, including alternate page templates,
	  user metatag autocompete, and keyword metatag autocomplete.
	* [Feature] Added support for <upgrade> directives to contain a <phpfileinclude> tag.  This file gets
	  executed automatically upon the appropriate upgrade.  This allows for very fine grain upgrade logic
	  such as data manipulations and whatnot.
	* [Feature] Added support for readonly filters.  These are useful for print views.
	* [Feature] Added a new method, Model::getLinkFactory.  Allows for fine grain control of linked model
	  factories.
	* [Feature] Added a unique flag to the Dataset object, allows for use of the mysql DISTINCT flag.
	* [Feature] Added a new class, DatasetStream.  This buffers results from a dataset select statement so
	  as to not use too much memory on massive queries.
	* Moved the description field to above the input on standard form elements.
	* Better error reporting on the View.
	* Load blank meta data from the page object if provided in FormPageMetas.
	* New method, Core::CompareValues.  Provides more useful variable comparisons in forms.
	* New Filter option, linkname.  Allows the model key to be defined separately from the element name.
	* Updated the session system to make use of 5.4 systems.  This should clear up any weird issues with
	  sessions.
	* Incremented the minimum php version from 5.3.x to 5.4.x.
	* Support for alternate page templates is now working better!
	* Huge redux on how the page meta system operates and stores data.  Each key for each page is now
	  stored individually in the page_meta table.  This allows for lookups of this metadata and for more
	  functionality of the tags.
	* Scaffolding support for site-wide tag systems via the new metadata system.
	* Minor updates throughout the core and page request system to better support CLI testing.
	* Forms now support multiple models being added to it via Form::addModel.
	* Form groups now have a getID() method.  Acts the same as the getID method from FormElement.
	* New FormElement method, getValueTitle.  Gets the title of the currently selected option, if any.
	* Dropped the property Model::$_dirty in favor of the new Model::changed() method.  This actively
	  checks the data for changes.
	* New methods, Model::setToFormElement.
	* New method, Model::addToFormPost.
	-- Charlie Powell <charlie@eval.bz>  23 Jan 2013

Core Plus 2.4.0

	* [Bug] Fixed some View logic to properly replace tags in the rendering now instead of duplicating the
	  replacements.
	* [Bug] Fixed `key` = NULL and `key` != NULL statements in the mysqli backend.  These are now replaced
	  with IS and IS NOT.
	* [Feature] Added support for hooks to have a return type attached to them.  This allows different
	  hooks to return arrays or return statuses.
	* [Feature] Added a ViewControls object, which is responsible for handling the <ul/> group of control
	  links for a given object.
	* [Feature] Added the docs into the upstream codebase for easier maintenance.
	* [Feature] Added a smarty "controls" function meant for displaying the control links of a given
	  subject.
	* [Feature] Added the Dataset mode "Alter".  Useful for structural changes to the datastore.
	* [Feature] Added the alter command "rename" to the dataset.  This allows for columns to be renamed
	  pragmatically.
	* [Feature] Added ModelSchema, ModelSchemaColumn, MySQLi_Schema, and MySQLi_Schema_Column objects.
	  These help break apart the different components of the mysqli backend and greatly simplified some of
	  its logic.
	* [Feature] Added an XMLLoader::loadFromString method, allows XML data to be loaded from a string
	  representation of it.
	* [Feature] Added "getExtension" method in Directory_local_backend to provide better compatibility
	  with the File backend.
	* [Feature] Added logging for mimetype icons that don't exist on the system yet, (for DEVELOPMENT_MODE
	  only).
	* [Feature] #223 - Historical Permalink lookup.  URLs can now be changed onthefly, and any requests to
	  the old url will automatically be redirected to the new page with a 301.
	* [Feature] Added redirect status option to Core::Redirect.  It defaults to a 302, but can be set to a
	  permanent redirect instead.
	* [Feature] Added support for page resolution requests to start with a '?'.
	* [Feature] Added scaffolding support for multisite mode.
	* [Feature] Added logic to check for a valid upgrade path in components prior to executing any of its
	  upgrade logic.
	* [Feature] Added support for the model to be "loaded" without all primary keys set.
	* [Feature] Added a "SESSION_COOKIE_DOMAIN" configuration define, allows the site domain to be set for
	  cookies.
	* [Feature] Added a "findByField" method on the DatasetWhere object.  Allows for searching of a
	  specific key in the where clause.
	* [Feature] Added a modify method on the CoreDateTime object.
	* [Feature] Added a zip contents object.
	* [Feature] Added an ajaxlink javascript method.  Allows any "ajax-link" classed link to open in a
	  jquery window.
	* [Feature] Added a Core.Request javascript object to help with manipulation of the GET parameters.
	* [Feature] Added sort and pagination ability to the Filter system.
	* [Feature] Added context menus for controls.  These by default are hover based via the class
	  "controls-hover".
	* [Feature] Added hovercontext support to the ViewControl object.
	* [Feature] Added a addWhereParts method to the DatasetWhereClause object.  Allows for adding of
	  single where statements.
	* Rewrote the createTable and modifyTable methods of the mysqli backend to make use of the new
	  ModelSchema system. This has optimized the reinstall logic by scanning the tables before attempting
	  modifications, the number of write statements is drastically lower.
	* Set the CoreDateTime object to default to "now" if no date is given on construction.
	* Cleaned up the XMLLoader a little and added inline documentation on the rest of its methods.
	* Greatly optimized the copyFrom logic on local files.  Now instead of reading the entire file in
	  memory, only up to 10MB of a file is read/written at a time.
	* Set the getPreviewURL method to skip processing if the execution time is within 5 seconds of
	  timeout.
	* Updated some documentation.
	* Form elements now get 'required="required"' or 'checked="checked"' regardless if the value is set to
	  true or "1".
	* Reimplemented the meta tags.  They're now more expandable by external components.
	* Set maxlength as a valid attribute on text inputs.
	* Set maxlength as one of the attributes passed from the Model to the Form on BuildFromModel.
	* Changed the Template object to no longer extend Smarty.  This allows for a more specialized control
	  of it and cleared up a STRICT warning in php 5.4.
	* Updated the config controller a little.
	* Rewrote the ConfigHandler internal logic.  This is now a little easier to follow what it's doing.
	* Updated the ModelFactory to make use of the native ReflectionClass class.  Allows for more control
	  over instantiating of objects.
	* Reorganized the config.xml example to make it easier to set initially.
	* Reorganized some of the core hook names.
	* Removed some legacy code.
	* Model _saveExisting can now be called from extending Models.  This is useful for those models that
	  need to have more control over the save procedure.
	* Expanded the Directory ls command to allow searching for specific extensions.
	* Updated the SessionModel save logic to perform an INSERT_OR_UPDATE on save.  Should fix the race
	  condition.
	* Starting to add support for specific target widgets.  These will be targetable for areas such as
	  /admin and user profiles.
	-- Charlie Powell <charlie@eval.bz>  30 Dec 2012

Core Plus 2.3.2

	* [Bug] Fixed the FormPageMeta form for page template lookup.  It was trying to use directories as
	  files.
	* [Bug] Fixed the PageModel being set from a pageMetas object.  The meta tags were not coming over
	  correctly because the name was changed slightly.
	* [Bug] Fixed the input value being terminated after double quotes.  Resolution was replace the '/"'
	  with '&quot;'.
	* [Feature] Added FilterForm system; allows for filters to be created and utilized.
	* [Feature] Added a resetLink method in the Model.  Useful for deleting a child and not wanting them
	  to come back as linked.
	* [Feature] Added the input ID as the containing div's class name on formcheckboxesinput.
	* [Feature] Updated the title/seotitle feature (Feature #194) to make use of a dedicated variable.
	* Set the FormPageParentSelectInput value to be strtolower all the time.  Should fix many of the
	  baseurl and parenturl issues.
	* Updated the compiler to set only the relative path for the comments instead of the full path.
	* Switched the updater listing from NUMERIC sort to NATURAL sort.  This fixes the order of versions.
	-- Charlie Powell <charlie@eval.bz>  16 Nov 2012

Core Plus 2.3.1

	* [Bug] Fixed a bug with the parent page selection not selecting the correct parent page.
	* Updated the core.strings.js a little to prevent URLs from being crafted with two slashes next to
	  each other.
	* Updated the smarty a block to ignore blank confirm requests.
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.3.0

	* [Bug] Fixed a recursion bug with local files for if the file and mimetype icon are both unavailable.
	* [Performance] Optimized some system performance a little.
	* [Feature] Added a reset input element to the form system.
	* [Feature] Added a "setLink" method to models, useful for HAS../BELONGSTO relationships.
	* [Feature] Added a new "setFromForm" method on models.  Allows for more fine-tune control over the
	  form/model interaction in controllers.
	* [Feature] Added some inline documentation to the Dataset system.
	* [Feature] Implemented Feature #194, SEO friendly title tag system.
	* Major change in the dataset WHERE structure.  Where statements now support nested clauses, each with
	  their own separator and children.
	* Removed some debug content in the core.
	* Implemented the "getHash" method on remote files.
	* Improved logic in the smarty date function for invalid data being passed in.  Now an error is only
	  thrown if the site is in development mode, otherwise simply a blank string is returned.
	* Switched default SSL mode from ONDEMAND to DISABLED in the configuration example file.
	* Reorganized the page edit form a little and wrapped the SEO options in a common fieldset.
	* Started to implement the new page_template system (partial support in place).
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.2.6

	* [Bug] Fixed the navigation history in Core+.  Now saves the last 5 GET requests in history.
	* [Bug] Fixed the "GoBack" function of Core.
	* [Feature] Added a "isGet" method on the current page request.
	* [Feature] Added a "record" property onto the View.  Useful for indicating that certain pages
	  shouldn't be recorded by analytical tools.
	* Updated some documentation.
	-- Charlie Powell <charlie@eval.bz>  22 Oct 2012

Core Plus 2.2.5

	* [Bug] #173 - Minor tweak in the file preview system to strip spaces from the filenames.
	* [Bug] Fixed a major bug in the core component loader.  Installed components were being listed as
	  being loaded and activated before they were technically available.
	* [Feature] Added logic to prevent URLs with a '#' in them.
	* [Feature] Added a new class to handle datetimes, CoreDateTime.  This has better support for non-GMT
	  unix timestamps by using the DateTime object more directly.  (Legacy Time class was based on php <
	  5.2 logic.)
	* [Feature] Added support for custom user config validation.
	* [Feature] Added "Registered Hooks" in the debug information at the bottom of the page.
	* [Feature] Added support for resizing images with different rules, ie: fill mode or ignore aspect
	  ratio.
	* [Feature] Added a getRequest function for widgets.  Useful for getting the calling parameters.
	* Updated how widget parameters can be passed in.  Now smarty-style parameters are supports with the
	  {widget} function.
	-- Charlie Powell <charlie@eval.bz>  21 Oct 2012

Core Plus 2.2.4

	* [Bug] Fixed a bug on the page URL validation for the home page
	* [Bug] Fixed the file local backend to better handle duplicate filenames.  It will now check the hash
	  of each (#) file it finds instead of just skipping to the end of the line.
	* Removed an unnecessary directory from the root.
	-- Charlie Powell <charlie@eval.bz>  15 Oct 2012

Core Plus 2.2.3

	* [Bug] Fixed Bug #146: URL conflicts
	* [Bug] Fixed Bug #156: Installer does not complete in non-development mode
	* [Bug] Fixed Bug #115: Auto-installer does not handle models
	* [Feature] Added more files into the compiled bootstrap
	* [Feature] Added an included files section in the debug info
	* [Feature] Added new core hook, "/core/page/rendering"
	-- Charlie Powell <charlie@eval.bz>  14 Oct 2012

Core Plus 2.2.2

	* [Bug] Fixed the installer, it now handles enabling packages correctly.
	* [Bug] Fixed some other little bugs.
	-- Charlie Powell <charlie@eval.bz>  8 Oct 2012

Core Plus 2.2.1

	* [Bug] Fixed the SSL implementation
	* [Bug] Fixed the file upload input if only one option is present
	* [Bug] Fixes in the {img} tag for when the src is set but not available.
	* [Bug] Fix in the form system, added the autocomplete argument to parse correctly and a new getID
	  method.
	* [Bug] Fix in the model system to add support for models that are extended by other classes.
	* [Feature] Added javascript library for base64 operations
	* [Feature] Added a new utility, create_component.  This will create the skeleton structure of a new
	  component.
	* [Feature] Added html5shiv, the successor to the html5ie project.
	* [Feature] Added element IDs as a class name of the containing wrapper, allows for easier styling.
	* [Feature] Added a User object in the javascript api to make some basic user information visible in
	  javascript applications.
	* Styling tweaks
	* Switched the changelog to the new standard format
	* Updated the email system a little, it now sets the "Sender" and "X-Content-Encoded-By" headers.
	* Set the debug info to be hidden in print views.
	-- Charlie Powell <charlie@eval.bz>  3 Oct 2012

Core Plus 2.2.0

	-- Charlie Powell <charlie@eval.bz>  20 Sep 2012

Core Plus 0.1.0

	* Implementing better support for Debian-style version strings.
	* new {css} smarty block.
	* CurrentPage now supports inline styles to be added to the head.
	* Other minor fixes.

Core Plus 0.0.9

	* In the process of switching to AGPL.
	* Moved the theme systems into its own component.
	-- Charlie Powell <charlie@eval.bz>  Sat, 19 Nov 2011 03:12:23 +0000

Core Plus 0.0.8

	-- Charlie Powell <charlie@eval.bz>  Fri, 04 Nov 2011 05:51:11 +0000

Core Plus 0.0.7

	* Major work on the system updater, it now fundamentally works at least!
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Nov 2011 01:21:43 -0400

Core Plus 0.0.6

	* Did some fixes to the email system, it now actually works.
	* Considerable work on improving the Model validation system.  It now actually works.
	* Minor tweak in the Form validation logic, it now just shows the validation check in the error
	  message if the site is in development mode.
	-- Charlie Powell <charlie@eval.bz>  Tue, 11 Oct 2011 19:47:58 -0400

Core Plus 0.0.5

	* Updates to the stylesheet and the admin config system.
	-- Charlie Powell <charlie@eval.bz>  Sun, 18 Sep 2011 22:19:37 -0400

Core Plus 0.0.4

	* Adding phpMailer and the Email functionality back into the core.
	* Minor change to configuration options and how they're stored in the database.
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:47:36 -0400

Core Plus 0.0.3

	* More work completed on the user component (not included in core), and the widget system (included).
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:31:44 -0400

Core Plus 0.0.2-2

	* New cachecore method, flush().  This is useful in reinstalling all components and ensuring that
	  there are no lingering artifacts.
	-- Charlie Powell <charlie@eval.bz>  Mon, 15 Aug 2011 17:24:19 -0400

Core Plus 0.0.2-1

	* Removing some unnecessary components, namely the adodb5 library and the old version of the Form
	  system.
	* Did some updates to the phpass library.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Jul 2011 21:11:35 -0400

Core Plus 0.0.2

	* MAJOR changes, first re-release since the system switched from DAO to AR.  Includes a lot of other
	  fixes too.
	-- Charlie Powell <charlie@eval.bz>  Tue, 21 Jun 2011 23:02:02 -0400

Core Plus 0.0.1-dev1

	-- Charlie Powell <charlie@eval.bz>  Sun, 22 May 2011 02:00:52 -0400

